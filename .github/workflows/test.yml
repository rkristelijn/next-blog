name: Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type checking
        run: npx tsc --noEmit

  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate posts data
        run: node scripts/generate-posts-data.js

      - name: Run tests
        run: npm run ci:test

      - name: Run diagnostics
        run: npm run diagnose

      - name: Test build process
        run: npm run build

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for security vulnerabilities
        run: npm audit --audit-level=moderate

      - name: Check documentation consistency
        run: |
          echo "üìö Checking documentation..."
          
          # Check if new posts have proper frontmatter
          for file in src/content/posts/*.mdx; do
            if ! grep -q "^title:" "$file"; then
              echo "‚ùå Missing title in $file"
              exit 1
            fi
            if ! grep -q "^date:" "$file"; then
              echo "‚ùå Missing date in $file"
              exit 1
            fi
            if ! grep -q "^excerpt:" "$file"; then
              echo "‚ùå Missing excerpt in $file"
              exit 1
            fi
          done
          
          echo "‚úÖ All posts have required frontmatter"

      - name: Check for sensitive data
        run: |
          echo "üîí Checking for sensitive data..."
          
          # Check for potential secrets in code
          if grep -r "CLOUDFLARE_API_TOKEN.*=" src/ || grep -r "api_token.*=" src/; then
            echo "‚ùå Potential API token found in source code"
            exit 1
          fi
          
          # Check for hardcoded secrets
          if grep -r "sk-" src/ || grep -r "pk_" src/; then
            echo "‚ùå Potential hardcoded secret found"
            exit 1
          fi
          
          echo "‚úÖ No sensitive data detected"
